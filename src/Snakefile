#change to sample input so wildcard but user input on what data is being used in the pipeline
#expand("data/samples/{sample}.fa", sample=SAMPLES)
EXAMPLES =["L1","L2","R1","R2"]

rule all:
    input:
        "results/bc2010TRY.asm.bp.p_utg.gfa",
        "../results/{sample}.txt" #final txt file saying contig complete, kmer check complete

rule assembly2:
    input:
        "../raw_data/{sample}"
    output:
        "../results/{sample}.bp.p_utg.gfa",
        touch("../analysis/{sample}_hifiDONE.txt")
    shell:
        "sbatch -W hifiAssembly.sh {wildcards.sample}"
        "echo finished"
    #prefix argument ADD

rule force_assembly:
    input:
        "../analysis/{sample}_hifiDONE.txt"
    output:
        "{sample}.txt"

rule fasta_qc:
    input:
        "../raw_data/{sample}" #"genomeFasta/{sample}.fasta"
    output:
        "../results/{sample}.linear_plot.png"   #can you make genomescope output to add name** bash command #"fastaAnalyses/contig_{sample}.txt"
    script:
        "kmerAnalysis.sh" #includes kmer and quast


rule masking:
    input: 
        "genomeFasta/{sample}.fasta"
    output:
        "maskedFasta/{sample}.fasta"
    script:
        "scripts/maskingFasta.py"

rule geneAnnotations:
    input:
        "maskedFasta/{sample}.fasta"
    output:
        "fastaAnalyses/geneAnnotation_{sample}.gff",
    script:
        "scripts/geneGFF.py" 

rule noncodingAnnotations:
    input:
        "maskedFasta/{sample}.fasta"
    output:
        "fastaAnalyses/noncodingAnnotation_{sample}.gff"
    script:
        "scripts/noncodingGFF.py" 

rule combinedGFF:
    input:
        "fastaAnalyses/geneAnnotation_{sample}.gff",
        "fastaAnalyses/noncodingAnnotation_{sample}.gff"
    output:
        "fastaAnalyses/allAnnotation_{sample}.gff"
    script:
        "combineGFF.py"




