knitr::opts_chunk$set(echo = TRUE)
sessionInfo()
knitr::opts_chunk$set(echo = TRUE)
cortex_1_atac <- read.csv("C:/Users/danie/OneDrive/Documents/Wray_Lab/gynandromorph_2024/ERR5466846.bedgraph", sep="\t", header=FALSE)
glimpse(cortex_1_atac)
cortex_1_bedgraph <- read.csv("C:/Users/danie/OneDrive/Documents/Wray_Lab/gynandromorph_2024/ERR5466846.bedgraph", sep="\t", header=FALSE)
glimpse(cortex_1_bedgraph)
library(tidyverse)
library(pheatmap) # Plotting Heatmap
cortex_1_bedgraph <- read.csv("C:/Users/danie/OneDrive/Documents/Wray_Lab/gynandromorph_2024/ERR5466846.bedgraph", sep="\t", header=FALSE)
glimpse(cortex_1_bedgraph)
Chr <- "210001o"
Start <- 3300023
End <- 3373587
Hmel210001o:3300023-3373587
Chr <- "210001o"
Start <- 3300023
End <- 3373587
Hmel210001o:3300023-3373587
Chr <- "210001o"
Start <- 3300023
End <- 3373587
Hmel210001o:3300023-3373587
Chr <- "210001o"
Start <- 3300023
End <- 3373587
# Select SNPS of interest
filtered_cortex_1_bedgraph <- cortex_1_bedgraph %>% filter(grepl(Chr,V1))
#%>% filter(V2 > Start) %>% filter(V2 < End)
filtered_cortex_1_bedgraph
Chr <- "210001o"
Start <- 3300023
End <- 3373587
# Select SNPS of interest
filtered_cortex_1_bedgraph <- cortex_1_bedgraph %>% filter(grepl(Chr,V1)) %>% filter(V2 > Start) %>% filter(V2 < End)
filtered_cortex_1_bedgraph
plot=ggplot(filtered_cortex_1_atac, aes(x = V2, y = V7)) +
geom_line(size = 1.5) +
theme_base() +
theme(
plot.title=element_text(hjust=0.5, size=8),
axis.title.x = element_blank(),
axis.title.y = element_blank())
plot=ggplot(filtered_cortex_1_bedgraph, aes(x = V2, y = V7)) +
geom_line(size = 1.5) +
theme_base() +
theme(
plot.title=element_text(hjust=0.5, size=8),
axis.title.x = element_blank(),
axis.title.y = element_blank())
library(viridis)
# Plot heatmap of snp density in each leg
pheatmap::pheatmap(density, cluster_cols = FALSE, color=viridis(10))
plot=ggplot(filtered_cortex_1_bedgraph, aes(x = V2, y = V7)) +
geom_line(size = 1.5) +
theme_base() +
theme(
plot.title=element_text(hjust=0.5, size=8),
axis.title.x = element_blank(),
axis.title.y = element_blank())
plot=ggplot(filtered_cortex_1_bedgraph, aes(x = V2, y = V7)) +
geom_line(size = 1.5) +
theme(
plot.title=element_text(hjust=0.5, size=8),
axis.title.x = element_blank(),
axis.title.y = element_blank())
plot
plot=ggplot(filtered_cortex_1_bedgraph, aes(x = V2, y = V7)) +
geom_line(size = 1.5) +
theme_base() +
theme(
plot.title=element_text(hjust=0.5, size=8),
axis.title.x = element_blank(),
axis.title.y = element_blank())
plot=ggplot(filtered_cortex_1_bedgraph, aes(x = V2, y = V4)) +
geom_line(size = 1.5) +
theme_base() +
theme(
plot.title=element_text(hjust=0.5, size=8),
axis.title.x = element_blank(),
axis.title.y = element_blank())
plot=ggplot(filtered_cortex_1_bedgraph, aes(x = V2, y = V4)) +
geom_line(size = 1.5) +
theme(
plot.title=element_text(hjust=0.5, size=8),
axis.title.x = element_blank(),
axis.title.y = element_blank())
plot
plot=ggplot(filtered_cortex_1_bedgraph, aes(x = V2, y = V4)) +
geom_line(size = 1.5) +
theme(
plot.title=element_text(hjust=0.5, size=8),
axis.title.x = element_blank(),
axis.title.y = element_blank())+
theme_minimal()+
plot
plot=ggplot(filtered_cortex_1_bedgraph, aes(x = V2, y = V4)) +
geom_line(size = 1.5) +
theme(
plot.title=element_text(hjust=0.5, size=8),
axis.title.x = element_blank(),
axis.title.y = element_blank())+
theme_minimal()
plot
Chr <- "215003o"
Start <- 1390000
End <- 1450000
# Select SNPS of interest
filtered_cortex_1_bedgraph <- cortex_1_bedgraph %>% filter(grepl(Chr,V1)) %>% filter(V2 > Start) %>% filter(V2 < End)
filtered_cortex_1_bedgraph
plot=ggplot(filtered_cortex_1_bedgraph, aes(x = V2, y = V4)) +
geom_line(size = 1.5) +
theme(
plot.title=element_text(hjust=0.5, size=8),
axis.title.x = element_blank(),
axis.title.y = element_blank())+
theme_minimal()
plot
Chr <- "215003o"
Start <- 1390000
End <- 1450000
# Select SNPS of interest
interest <- mut %>% filter(grepl(Chr,CHROM)) %>% filter(POS > Start) %>% filter(POS < End)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(pheatmap) # Plotting Heatmap
library(viridis)
# Read in variants file
input <- read.csv("C:/Users/danie/OneDrive/Documents/Wray_Lab/20240828.color.regions.tsv",sep="\t", header=TRUE) #%>% unite("SNP", CHROM:POS, sep = ":", remove = TRUE, na.rm = FALSE)
# Keep only SNPS (not indels or mixed)
snps <- input %>% filter(grepl("SNP",input$TYPE))
# Keep only INDELS (not snps or mixed)
indels <- input %>% filter(grepl("INDEL",input$TYPE))
# Keep only INDELS (not snps or mixed)
mixed <- input %>% filter(grepl("MIXED",input$TYPE))
genotypes <- c("TN2L_S1","TN2R_S2","TN3L_S3","TN3R_S4") # Defines the genotype columns
type_summary <- input %>% count(TYPE) # Summarizes variant types
colnames(type_summary) <- c("Type", "Total")
# Remove entries with missing genotypes
snps[genotypes] <- lapply(snps[genotypes], gsub, pattern = ".", replacement = "missing", fixed = TRUE)
filtered_snps <- snps %>% filter(!if_any(everything(), ~ grepl("missing", .)))
indels[genotypes] <- lapply(indels[genotypes], gsub, pattern = ".", replacement = "missing", fixed = TRUE)
filtered_indels <- indels %>% filter(!if_any(everything(), ~ grepl("missing", .)))
mixed[genotypes] <- lapply(mixed[genotypes], gsub, pattern = ".", replacement = "missing", fixed = TRUE)
filtered_mixed <- mixed %>% filter(!if_any(everything(), ~ grepl("missing", .)))
complete <- as_data_frame(rbind(c("INDEL", dim(filtered_indels)[1]), c("SNP",dim(filtered_snps)[1]), c("MIXED", dim(filtered_mixed)[1])))
colnames(complete) <- c("Type", "Complete")
type_summary <- left_join(type_summary, complete, by = "Type")
# Remove fixed differences from the reference
filtered_variable_snps <- filtered_snps %>% filter(!grepl("8",filtered_snps$AC))
filtered_variable_indels <- filtered_indels %>% filter(!grepl("8",filtered_indels$AC))
filtered_variable_mixed <- filtered_mixed %>% filter(!grepl("8",filtered_mixed$AC))
variable <- as_data_frame(rbind(c("INDEL", dim(filtered_variable_indels)[1]), c("SNP",dim(filtered_variable_snps)[1]), c("MIXED", dim(filtered_variable_mixed)[1])))
colnames(variable) <- c("Type", "Variable")
type_summary <- left_join(type_summary, variable, by = "Type")
# Remove entries with multiple alternative alleles
mono_allelic_snps <- filtered_variable_snps %>% filter(!grepl(",",ALT))
mono_allelic_indels <- filtered_variable_indels %>% filter(!grepl(",",ALT))
mono_allelic_mixed <- filtered_variable_mixed %>% filter(!grepl(",",ALT))
mono_allelic <- as_data_frame(rbind(c("INDEL", dim(mono_allelic_indels)[1]), c("SNP",dim(mono_allelic_snps)[1]), c("MIXED", dim(mono_allelic_mixed)[1])))
colnames(mono_allelic) <- c("Type", "Mono-allelic")
left_join(type_summary, mono_allelic, by = "Type")
### Change genotype from characters to numeric form###
mut <- mono_allelic_snps
mut[] <- lapply(mut, gsub, pattern = "/", replacement = "", fixed = TRUE)
mut[] <- lapply(mut, gsub, pattern = "|", replacement = "", fixed = TRUE)
head(mut)
mut <- mut %>% rowwise() %>% mutate(TN2L_S1 = str_replace_all(TN2L_S1, REF, "0"))
mut <- mut %>% rowwise() %>% mutate(TN2L_S1 = str_replace_all(TN2L_S1, ALT, "1"))
mut <- mut %>% rowwise() %>% mutate(TN2R_S2 = str_replace_all(TN2R_S2, REF, "0"))
mut <- mut %>% rowwise() %>% mutate(TN2R_S2 = str_replace_all(TN2R_S2, ALT, "1"))
mut <- mut %>% rowwise() %>% mutate(TN3L_S3 = str_replace_all(TN3L_S3, REF, "0"))
mut <- mut %>% rowwise() %>% mutate(TN3L_S3 = str_replace_all(TN3L_S3, ALT, "1"))
mut <- mut %>% rowwise() %>% mutate(TN3R_S4 = str_replace_all(TN3R_S4, REF, "0"))
mut <- mut %>% rowwise() %>% mutate(TN3R_S4 = str_replace_all(TN3R_S4, ALT, "1"))
genotypes <- c("TN2L_S1","TN2R_S2","TN3L_S3","TN3R_S4")
mut[genotypes] <- lapply(mut[genotypes], gsub, pattern = "00", replacement = "0", fixed = TRUE)
mut[genotypes] <- lapply(mut[genotypes], gsub, pattern = "01", replacement = "1", fixed = TRUE)
mut[genotypes] <- lapply(mut[genotypes], gsub, pattern = "11", replacement = "2", fixed = TRUE)
mut
knitr::opts_chunk$set(echo = TRUE)
library(rtracklayer)
library(gridExtra)
library(tidyverse)
library(grid)
library(ggthemes)
Chr <- "215003o"
Start <- 1390000
End <- 1450000
# Select SNPS of interest
interest <- mut %>% filter(grepl(Chr,CHROM)) %>% filter(POS > Start) %>% filter(POS < End)
#ggplot(interest, aes(x=POS)) + geom_histogram(bins=100)
# Make numeric columns numeric type
interest$POS <- as.numeric(as.character(interest$POS))
interest$TN2L_S1 <- as.numeric(as.character(interest$TN2L_S1))
interest$TN2R_S2 <- as.numeric(as.character(interest$TN2R_S2))
interest$TN3L_S3 <- as.numeric(as.character(interest$TN3L_S3))
interest$TN3R_S4 <- as.numeric(as.character(interest$TN3R_S4))
# Group by genomic windows of 100bp and count snps. CHANGE THE BIN WIDTH HERE
interest$cut <- cut(interest$POS, breaks = seq(Start,End,150), labels=1:((End-Start)/150))
density <- interest %>% group_by(cut, .drop = FALSE) %>% summarise(TN2L = sum(TN2L_S1), TN2R = sum(TN2R_S2), TN3L = sum(TN3L_S3), TN3R = sum(TN3R_S4)) %>%  select(!cut) %>%  as.matrix() %>% t()
#changing heat to line, data prep
density_2 <- interest %>% group_by(cut, .drop = FALSE) %>% summarise(TN2L = sum(TN2L_S1), TN2R = sum(TN2R_S2), TN3L = sum(TN3L_S3), TN3R = sum(TN3R_S4)) %>%  select(!cut) %>% tibble::rownames_to_column() %>% pivot_longer(cols = TN2L:TN3R, names_to = "Sample", values_to = "snp_value")
density_2$rowname <- as.numeric(density_2$rowname)
density_2
library(viridis)
# Plot heatmap of snp density in each leg
pheatmap::pheatmap(density, cluster_cols = FALSE, color=viridis(10))
density
plot=ggplot(density_2, aes(x = rowname, y = snp_value, color = Sample)) +
geom_line(size = 1.5) +
theme_base() +
theme(
plot.title=element_text(hjust=0.5, size=8),
axis.title.x = element_blank(),
axis.title.y = element_blank()) +
scale_color_manual(
values = c("TN2L" = "blue",
"TN2R" = "red",
"TN3L" = "forestgreen",
"TN3R" = "orange"
))
plot
ZCovPlot = function(file) {
Sys.setlocale(locale="C")
bw=import.bw(file)
bw_df=as.data.frame(bw)
desired_seq_name="Hmel215003o"
filtered_bw_df=bw_df %>%
filter(seqnames == desired_seq_name, start >=1390000, end <=1450000)
return(filtered_bw_df)
}
L2=ZCovPlot("C:/Users/danie/OneDrive/Documents/Wray_Lab/gynandromorph_2024/R_Markdown/TN2L_S1.dedup.bw")
R2=ZCovPlot("C:/Users/danie/OneDrive/Documents/Wray_Lab/gynandromorph_2024/R_Markdown/TN2R_S2.dedup.bw")
L3=ZCovPlot("C:/Users/danie/OneDrive/Documents/Wray_Lab/gynandromorph_2024/R_Markdown/TN3L_S3.dedup.bw")
R3=ZCovPlot("C:/Users/danie/OneDrive/Documents/Wray_Lab/gynandromorph_2024/R_Markdown/TN3R_S4.dedup.bw")
L2
max_start=max(L2$start)
max_score=max(L2$score)
plot=ggplot(L2, aes(x=start, y=log(score)))+
geom_line(color="darkmagenta", size=1.5)+
geom_line(data=L2, color="blue", size=1.5)+
geom_line(data=R2, color="red", size=1.5)+
geom_line(data=L3, color="forestgreen", size=1.5)+
geom_line(data=R3, color="orange", size=1.5)+
ggtitle(paste("TN2L", " Optix Coverage Plot"))+
theme_base() +
theme(
plot.title=element_text(hjust=0.5, size=8),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
plot
max_start=max(L2$start)
max_score=max(L2$score)
plot=ggplot(L2, aes(x=start, y=log(score)))+
geom_line(color="darkmagenta", size=1.5)+
geom_line(data=L2, color="blue", size=1.5)+
geom_line(data=R2, color="red", size=1.5)+
geom_line(data=L3, color="forestgreen", size=1.5)+
geom_line(data=R3, color="orange", size=1.5)+
ggtitle(paste("TN2L", " Optix Coverage Plot"))+
theme_base() +
theme(
plot.title=element_text(hjust=0.5, size=2),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
plot
max_start=max(L2$start)
max_score=max(L2$score)
plot=ggplot(L2, aes(x=start, y=log(score)))+
geom_line(color="darkmagenta", size=0.5)+
geom_line(data=L2, color="blue", size=0.5)+
geom_line(data=R2, color="red", size=0.5)+
geom_line(data=L3, color="forestgreen", size=0.5)+
geom_line(data=R3, color="orange", size=0.5)+
ggtitle(paste("TN2L", " Optix Coverage Plot"))+
theme_base() +
theme(
plot.title=element_text(hjust=0.5, size=2),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
plot
ZCovPlot = function(file) {
Sys.setlocale(locale="C")
bw=import.bw(file)
bw_df=as.data.frame(bw)
desired_seq_name="Hmel215003o"
filtered_bw_df=bw_df %>%
filter(seqnames == desired_seq_name, start >=1400000, end <=1420000)
return(filtered_bw_df)
}
L2=ZCovPlot("C:/Users/danie/OneDrive/Documents/Wray_Lab/gynandromorph_2024/R_Markdown/TN2L_S1.dedup.bw")
R2=ZCovPlot("C:/Users/danie/OneDrive/Documents/Wray_Lab/gynandromorph_2024/R_Markdown/TN2R_S2.dedup.bw")
L3=ZCovPlot("C:/Users/danie/OneDrive/Documents/Wray_Lab/gynandromorph_2024/R_Markdown/TN3L_S3.dedup.bw")
R3=ZCovPlot("C:/Users/danie/OneDrive/Documents/Wray_Lab/gynandromorph_2024/R_Markdown/TN3R_S4.dedup.bw")
L2
max_start=max(L2$start)
max_score=max(L2$score)
plot=ggplot(L2, aes(x=start, y=log(score)))+
geom_line(color="darkmagenta", size=0.5)+
geom_line(data=L2, color="blue", size=0.5)+
geom_line(data=R2, color="red", size=0.5)+
geom_line(data=L3, color="forestgreen", size=0.5)+
geom_line(data=R3, color="orange", size=0.5)+
ggtitle(paste("TN2L", " Optix Coverage Plot"))+
theme_base() +
theme(
plot.title=element_text(hjust=0.5, size=2),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
plot
ZCovPlot = function(file) {
Sys.setlocale(locale="C")
bw=import.bw(file)
bw_df=as.data.frame(bw)
desired_seq_name="Hmel215003o"
filtered_bw_df=bw_df %>%
filter(seqnames == desired_seq_name, start >=1405000, end <=1420000)
return(filtered_bw_df)
}
L2=ZCovPlot("C:/Users/danie/OneDrive/Documents/Wray_Lab/gynandromorph_2024/R_Markdown/TN2L_S1.dedup.bw")
R2=ZCovPlot("C:/Users/danie/OneDrive/Documents/Wray_Lab/gynandromorph_2024/R_Markdown/TN2R_S2.dedup.bw")
L3=ZCovPlot("C:/Users/danie/OneDrive/Documents/Wray_Lab/gynandromorph_2024/R_Markdown/TN3L_S3.dedup.bw")
R3=ZCovPlot("C:/Users/danie/OneDrive/Documents/Wray_Lab/gynandromorph_2024/R_Markdown/TN3R_S4.dedup.bw")
L2
max_start=max(L2$start)
max_score=max(L2$score)
plot=ggplot(L2, aes(x=start, y=log(score)))+
geom_line(color="darkmagenta", size=0.5)+
geom_line(data=L2, color="blue", size=0.5)+
geom_line(data=R2, color="red", size=0.5)+
geom_line(data=L3, color="forestgreen", size=0.5)+
geom_line(data=R3, color="orange", size=0.5)+
ggtitle(paste("TN2L", " Optix Coverage Plot"))+
theme_base() +
theme(
plot.title=element_text(hjust=0.5, size=2),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
plot
ZCovPlot = function(file) {
Sys.setlocale(locale="C")
bw=import.bw(file)
bw_df=as.data.frame(bw)
desired_seq_name="Hmel215003o"
filtered_bw_df=bw_df %>%
filter(seqnames == desired_seq_name, start >=1400000, end <=1420000)
return(filtered_bw_df)
}
L2=ZCovPlot("C:/Users/danie/OneDrive/Documents/Wray_Lab/gynandromorph_2024/R_Markdown/TN2L_S1.dedup.bw")
R2=ZCovPlot("C:/Users/danie/OneDrive/Documents/Wray_Lab/gynandromorph_2024/R_Markdown/TN2R_S2.dedup.bw")
L3=ZCovPlot("C:/Users/danie/OneDrive/Documents/Wray_Lab/gynandromorph_2024/R_Markdown/TN3L_S3.dedup.bw")
R3=ZCovPlot("C:/Users/danie/OneDrive/Documents/Wray_Lab/gynandromorph_2024/R_Markdown/TN3R_S4.dedup.bw")
L2
max_start=max(L2$start)
max_score=max(L2$score)
plot=ggplot(L2, aes(x=start, y=log(score)))+
geom_line(color="darkmagenta", size=0.5)+
geom_line(data=L2, color="blue", size=0.5)+
geom_line(data=R2, color="red", size=0.5)+
geom_line(data=L3, color="forestgreen", size=0.5)+
geom_line(data=R3, color="orange", size=0.5)+
ggtitle(paste("TN2L", " Optix Coverage Plot"))+
theme_base() +
theme(
plot.title=element_text(hjust=0.5, size=2),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
plot
ZCovPlot = function(file) {
Sys.setlocale(locale="C")
bw=import.bw(file)
bw_df=as.data.frame(bw)
desired_seq_name="Hmel215003o"
filtered_bw_df=bw_df %>%
filter(seqnames == desired_seq_name, start >=1400000, end <=1405000)
return(filtered_bw_df)
}
L2=ZCovPlot("C:/Users/danie/OneDrive/Documents/Wray_Lab/gynandromorph_2024/R_Markdown/TN2L_S1.dedup.bw")
R2=ZCovPlot("C:/Users/danie/OneDrive/Documents/Wray_Lab/gynandromorph_2024/R_Markdown/TN2R_S2.dedup.bw")
L3=ZCovPlot("C:/Users/danie/OneDrive/Documents/Wray_Lab/gynandromorph_2024/R_Markdown/TN3L_S3.dedup.bw")
R3=ZCovPlot("C:/Users/danie/OneDrive/Documents/Wray_Lab/gynandromorph_2024/R_Markdown/TN3R_S4.dedup.bw")
L2
max_start=max(L2$start)
max_score=max(L2$score)
plot=ggplot(L2, aes(x=start, y=log(score)))+
geom_line(color="darkmagenta", size=0.5)+
geom_line(data=L2, color="blue", size=0.5)+
geom_line(data=R2, color="red", size=0.5)+
geom_line(data=L3, color="forestgreen", size=0.5)+
geom_line(data=R3, color="orange", size=0.5)+
ggtitle(paste("TN2L", " Optix Coverage Plot"))+
theme_base() +
theme(
plot.title=element_text(hjust=0.5, size=2),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
plot
Chr <- "215003o"
Start <- 1400000
End <- 1405000
# Select SNPS of interest
interest <- mut %>% filter(grepl(Chr,CHROM)) %>% filter(POS > Start) %>% filter(POS < End)
#ggplot(interest, aes(x=POS)) + geom_histogram(bins=100)
# Make numeric columns numeric type
interest$POS <- as.numeric(as.character(interest$POS))
interest$TN2L_S1 <- as.numeric(as.character(interest$TN2L_S1))
interest$TN2R_S2 <- as.numeric(as.character(interest$TN2R_S2))
interest$TN3L_S3 <- as.numeric(as.character(interest$TN3L_S3))
interest$TN3R_S4 <- as.numeric(as.character(interest$TN3R_S4))
# Group by genomic windows of 100bp and count snps. CHANGE THE BIN WIDTH HERE
interest$cut <- cut(interest$POS, breaks = seq(Start,End,150), labels=1:((End-Start)/150))
density <- interest %>% group_by(cut, .drop = FALSE) %>% summarise(TN2L = sum(TN2L_S1), TN2R = sum(TN2R_S2), TN3L = sum(TN3L_S3), TN3R = sum(TN3R_S4)) %>%  select(!cut) %>%  as.matrix() %>% t()
#changing heat to line, data prep
density_2 <- interest %>% group_by(cut, .drop = FALSE) %>% summarise(TN2L = sum(TN2L_S1), TN2R = sum(TN2R_S2), TN3L = sum(TN3L_S3), TN3R = sum(TN3R_S4)) %>%  select(!cut) %>% tibble::rownames_to_column() %>% pivot_longer(cols = TN2L:TN3R, names_to = "Sample", values_to = "snp_value")
density_2$rowname <- as.numeric(density_2$rowname)
density_2
library(viridis)
# Plot heatmap of snp density in each leg
pheatmap::pheatmap(density, cluster_cols = FALSE, color=viridis(10))
density
plot=ggplot(density_2, aes(x = rowname, y = snp_value, color = Sample)) +
geom_line(size = 1.5) +
theme_base() +
theme(
plot.title=element_text(hjust=0.5, size=8),
axis.title.x = element_blank(),
axis.title.y = element_blank()) +
scale_color_manual(
values = c("TN2L" = "blue",
"TN2R" = "red",
"TN3L" = "forestgreen",
"TN3R" = "orange"
))
plot
cortex_1_atac <- read.csv("C:/Users/danie/OneDrive/Documents/Wray_Lab/gynandromorph_2024/ERR5466846_peaks.narrowPeak", sep="\t", header=FALSE)
glimpse(cortex_1_atac)
Chr <- "215003o"
Start <- 1400000
End <- 1405000
# Select SNPS of interest
filtered_cortex_1_bedgraph <- cortex_1_bedgraph %>% filter(grepl(Chr,V1)) %>% filter(V2 > Start) %>% filter(V2 < End)
filtered_cortex_1_bedgraph
plot=ggplot(filtered_cortex_1_bedgraph, aes(x = V2, y = V4)) +
geom_line(size = 1.5) +
theme(
plot.title=element_text(hjust=0.5, size=8),
axis.title.x = element_blank(),
axis.title.y = element_blank())+
theme_minimal()
plot
